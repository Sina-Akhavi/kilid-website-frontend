{"ast":null,"code":"import \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/es.json.stringify.js\";\nimport \"core-js/modules/es.error.cause.js\";\nimport \"core-js/modules/es.error.to-string.js\";\nexport default {\n  name: \"Login\",\n  data: function data() {\n    return {\n      username: \"\",\n      password: \"\",\n      url: \"http://localhost:8080/\"\n    };\n  },\n  methods: {\n    handleSubmit: function handleSubmit() {\n      // console.log(({\n      //     username: this.username,\n      //     password: this.password\n      //   }));\n\n      fetch(\"http://localhost:8080/user/register\", {\n        method: \"POST\",\n        // Specify POST method\n        headers: {\n          \"Content-Type\": \"application/json\" // Indicate JSON data format\n        },\n        body: JSON.stringify({\n          id: 0,\n          username: \"1\",\n          password: \"1\",\n          email: \"1\",\n          creationTime: \"2024-02-03T16:59:28.693Z\",\n          firstName: \"string\",\n          lastName: \"string\"\n        }) // Stringify your user data object\n      }).then(function (response) {\n        if (response.status === 201) {\n          // Check for successful creation\n          return response.json(); // Parse the response body (assuming it's JSON)\n        } else {\n          throw new Error(\"Registration failed.\"); // Handle other status codes\n        }\n      }).then(function (user) {\n        // Handle successful registration (e.g., redirect to login, show success message)\n        console.log(\"User registered:\", user);\n      })[\"catch\"](function (error) {\n        // Handle errors (e.g., display error message to user)\n        console.error(error);\n      });\n    }\n  }\n};","map":{"version":3,"names":["name","data","username","password","url","methods","handleSubmit","fetch","method","headers","body","JSON","stringify","id","email","creationTime","firstName","lastName","then","response","status","json","Error","user","console","log","error"],"sources":["/home/drsystem/Documents/term7/Study/database/final_project/kilid-website-frontend/src/views/Login.vue"],"sourcesContent":["<template>\n  <div class=\"login-container\">\n    <h2>Login</h2>\n\n    <form class=\"login-form\" @submit.prevent=\"\">\n      <label for=\"username\">Username:</label>\n      <input\n        type=\"text\"\n        id=\"username\"\n        name=\"username\"\n        v-model=\"username\"\n        required\n      />\n\n      <label for=\"password\">Password:</label>\n      <input\n        type=\"password\"\n        id=\"password\"\n        name=\"password\"\n        v-model=\"password\"\n        required\n      />\n\n      <button @click=\"handleSubmit\">Login</button>\n    </form>\n  </div>\n</template>\n\n<script>\nexport default {\n  name: \"Login\",\n  data() {\n    return {\n      username: \"\",\n      password: \"\",\n      url: \"http://localhost:8080/\",\n    };\n  },\n\n  methods: {\n    handleSubmit() {\n      // console.log(({\n      //     username: this.username,\n      //     password: this.password\n      //   }));\n\n      fetch(\"http://localhost:8080/user/register\", {\n        method: \"POST\", // Specify POST method\n        headers: {\n          \"Content-Type\": \"application/json\", // Indicate JSON data format\n        },\n        body: JSON.stringify({\n          id: 0,\n          username: \"1\",\n          password: \"1\",\n          email: \"1\",\n          creationTime: \"2024-02-03T16:59:28.693Z\",\n          firstName: \"string\",\n          lastName: \"string\",\n        }), // Stringify your user data object\n      })\n        .then((response) => {\n          if (response.status === 201) {\n            // Check for successful creation\n            return response.json(); // Parse the response body (assuming it's JSON)\n          } else {\n            throw new Error(\"Registration failed.\"); // Handle other status codes\n          }\n        })\n        .then((user) => {\n          // Handle successful registration (e.g., redirect to login, show success message)\n          console.log(\"User registered:\", user);\n        })\n        .catch((error) => {\n          // Handle errors (e.g., display error message to user)\n          console.error(error);\n        });\n    },\n  },\n};\n</script>\n\n<style scoped>\n.login-container {\n  background-color: #fff;\n  box-shadow: 0 0 10px rgba(0, 0, 0, 0.1);\n  padding: 20px;\n  border-radius: 8px;\n  width: 300px;\n}\n\n.login-container h2 {\n  text-align: center;\n  color: #333;\n}\n\n.login-form {\n  display: flex;\n  flex-direction: column;\n  gap: 15px;\n}\n\n.login-form label {\n  font-weight: bold;\n}\n\n.login-form input {\n  padding: 10px;\n  border: 1px solid #ccc;\n  border-radius: 4px;\n}\n\n.login-form button {\n  padding: 10px;\n  background-color: #4caf50;\n  color: #fff;\n  border: none;\n  border-radius: 4px;\n  cursor: pointer;\n}\n\n.login-form button:hover {\n  background-color: #45a049;\n}\n</style>\n"],"mappings":";;;;AA6BA,eAAe;EACbA,IAAI,EAAE,OAAO;EACbC,IAAI,WAAAA,KAAA,EAAG;IACL,OAAO;MACLC,QAAQ,EAAE,EAAE;MACZC,QAAQ,EAAE,EAAE;MACZC,GAAG,EAAE;IACP,CAAC;EACH,CAAC;EAEDC,OAAO,EAAE;IACPC,YAAY,WAAAA,aAAA,EAAG;MACb;MACA;MACA;MACA;;MAEAC,KAAK,CAAC,qCAAqC,EAAE;QAC3CC,MAAM,EAAE,MAAM;QAAE;QAChBC,OAAO,EAAE;UACP,cAAc,EAAE,kBAAkB,CAAE;QACtC,CAAC;QACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;UACnBC,EAAE,EAAE,CAAC;UACLX,QAAQ,EAAE,GAAG;UACbC,QAAQ,EAAE,GAAG;UACbW,KAAK,EAAE,GAAG;UACVC,YAAY,EAAE,0BAA0B;UACxCC,SAAS,EAAE,QAAQ;UACnBC,QAAQ,EAAE;QACZ,CAAC,CAAC,CAAE;MACN,CAAC,EACEC,IAAI,CAAC,UAACC,QAAQ,EAAK;QAClB,IAAIA,QAAQ,CAACC,MAAK,KAAM,GAAG,EAAE;UAC3B;UACA,OAAOD,QAAQ,CAACE,IAAI,CAAC,CAAC,EAAE;QAC1B,OAAO;UACL,MAAM,IAAIC,KAAK,CAAC,sBAAsB,CAAC,EAAE;QAC3C;MACF,CAAC,EACAJ,IAAI,CAAC,UAACK,IAAI,EAAK;QACd;QACAC,OAAO,CAACC,GAAG,CAAC,kBAAkB,EAAEF,IAAI,CAAC;MACvC,CAAC,UACK,CAAC,UAACG,KAAK,EAAK;QAChB;QACAF,OAAO,CAACE,KAAK,CAACA,KAAK,CAAC;MACtB,CAAC,CAAC;IACN;EACF;AACF,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}