{"ast":null,"code":"import \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/es.json.stringify.js\";\nimport \"core-js/modules/es.error.cause.js\";\nimport \"core-js/modules/es.error.to-string.js\";\nimport \"core-js/modules/es.array.push.js\";\nexport default {\n  data: function data() {\n    return {\n      agency: {\n        persianName: \"\",\n        phone: \"\",\n        city: \"\",\n        numberOfEmployees: 0\n      },\n      manager: {\n        managerFirstName: \"\",\n        managerLastName: \"\",\n        managerUsername: \"\",\n        managerPhoneNumber: \"\"\n      },\n      password: \"\"\n    };\n  },\n  methods: {\n    handleSubmit: function handleSubmit() {\n      var _this = this;\n      fetch(\"http://localhost:8080/agency/\", {\n        method: \"POST\",\n        // Specify POST method\n        headers: {\n          \"Content-Type\": \"application/json\" // Indicate JSON data format\n        },\n        body: JSON.stringify({\n          persianName: this.agency.persianName,\n          phone: this.agency.phone,\n          city: this.agency.city,\n          numberOfEmployees: 0,\n          managerUsername: \"\",\n          managerFirstName: \"\",\n          managerLastName: \"\",\n          managerPhoneNumber: \"\",\n          password: \"\"\n        })\n      }).then(function (response) {\n        if (response.status === 201) {\n          // Check for successful creation\n          return response.json(); // Parse the response body (assuming it's JSON)\n        } else {\n          throw new Error(\"Agency Registration Failed.\"); // Handle other status codes\n        }\n      }).then(function (agency) {\n        // Handle successful registration (e.g., redirect to login, show success message)\n        console.log(\"Agency created:\", agency);\n        _this.$router.push({\n          name: 'AgencyProfile'\n        });\n      })[\"catch\"](function (error) {\n        // Handle errors (e.g., display error message to user)\n        console.error(error);\n      });\n    }\n  }\n};","map":{"version":3,"names":["data","agency","persianName","phone","city","numberOfEmployees","manager","managerFirstName","managerLastName","managerUsername","managerPhoneNumber","password","methods","handleSubmit","_this","fetch","method","headers","body","JSON","stringify","then","response","status","json","Error","console","log","$router","push","name","error"],"sources":["/home/drsystem/Documents/term7/Study/database/final_project/kilid-website-frontend/src/views/AgencyForm.vue"],"sourcesContent":["<template>\n  <div class=\"container\">\n    <img src=\"../assets/background.jpeg\" alt=\"Agency Image\" class=\"background-image\">\n    <div class=\"form-container\">\n      <h1>Agency Information Form</h1>\n      <form @submit.prevent=\"\">\n        <fieldset>\n          <legend>Agency Details</legend>\n          <label for=\"agencyName\">Agency Name:</label>\n          <input type=\"text\" id=\"agencyName\" v-model=\"agency.persianName\" required />\n          <br /><br />\n\n          <label for=\"telephone\">Telephone:</label>\n          <input type=\"tel\" id=\"telephone\" v-model=\"agency.phone\" required />\n          <br /><br />\n\n          <label for=\"city\">City:</label>\n          <input type=\"text\" id=\"city\" v-model=\"agency.city\" required />\n          <br /><br />\n\n          <label for=\"numberOfEmployees\">Number of Employees:</label>\n          <input\n            type=\"number\"\n            id=\"numberOfEmployees\"\n            v-model=\"agency.numberOfEmployees\"\n            min=\"1\"\n            required\n          />\n          <br /><br />\n        </fieldset>\n\n        <fieldset>\n          <legend>Manager Information</legend>\n          <label for=\"managerName\">First Name:</label>\n          <input\n            type=\"text\"\n            id=\"managerName\"\n            v-model=\"manager.firstName\"\n            required\n          />\n          <br /><br />\n\n          <label for=\"managerFamilyName\">Family Name:</label>\n          <input\n            type=\"text\"\n            id=\"managerFamilyName\"\n            v-model=\"manager.lastName\"\n            required\n          />\n          <br /><br />\n\n          <label for=\"managerTelephone\">Telephone Number:</label>\n          <input\n            type=\"tel\"\n            id=\"managerTelephone\"\n            v-model=\"manager.managerPhoneNumber\"\n            required\n          />\n          <br /><br />\n\n          <label for=\"managerUsername\">Manager Username:</label>\n          <input\n            type=\"tel\"\n            id=\"managerUsername\"\n            v-model=\"manager.managerUsername\"\n            required\n          />\n\n          <br /><br />\n        </fieldset>\n\n        <fieldset>\n          <legend>Password</legend>\n          <label for=\"password\">Create a Password:</label>\n          <input type=\"password\" id=\"password\" v-model=\"password\" required />\n          <br /><br />\n        </fieldset>\n\n        <button @click=\"handleSubmit\">Submit Information</button>\n        <!-- <button @click=handleSubmit>Submit Information</button> -->\n      </form>\n    </div>\n  </div>\n</template>\n\n\n<script>\nexport default {\n  data() {\n    return {\n      agency: {\n        persianName: \"\",\n        phone: \"\",\n        city: \"\",\n        numberOfEmployees: 0,\n      },\n      manager: {\n        managerFirstName: \"\",\n        managerLastName: \"\",\n        managerUsername: \"\",\n        managerPhoneNumber: \"\",\n      },\n      password: \"\",\n    };\n  },\n  methods: {\n    handleSubmit() {\n      fetch(\"http://localhost:8080/agency/\", {\n        method: \"POST\", // Specify POST method\n        headers: {\n          \"Content-Type\": \"application/json\", // Indicate JSON data format\n        },\n        body: JSON.stringify({\n          persianName: this.agency.persianName,\n          phone: this.agency.phone,\n          city: this.agency.city,\n          numberOfEmployees: 0,\n          managerUsername: \"\",\n          managerFirstName: \"\",\n          managerLastName: \"\",\n          managerPhoneNumber: \"\",\n          password: \"\"\n        }),\n      })\n        .then((response) => {\n          if (response.status === 201) {\n            // Check for successful creation\n            return response.json(); // Parse the response body (assuming it's JSON)\n          } else {\n            throw new Error(\"Agency Registration Failed.\"); // Handle other status codes\n          }\n        })\n        .then((agency) => {\n          // Handle successful registration (e.g., redirect to login, show success message)\n          console.log(\"Agency created:\", agency);\n          this.$router.push({ name: 'AgencyProfile'});  \n        })\n        .catch((error) => {\n          // Handle errors (e.g., display error message to user)\n          console.error(error);\n        });\n    },\n  },\n};\n</script>\n\n<style scoped>\n/* Reset browser styles for cleaner base */\n* {\n  margin: 0;\n  padding: 0;\n  box-sizing: border-box;\n}\n\nbody {\n  font-family: sans-serif;\n}\n\nh1 {\n  text-align: center;\n  font-size: 1.5rem;\n  margin-bottom: 1rem;\n}\n\nform {\n  display: flex;\n  flex-direction: column;\n  width: 500px;\n  margin: 0 auto;\n}\n\nfieldset {\n  border: 1px solid #ddd;\n  border-radius: 5px;\n  padding: 15px;\n  margin-bottom: 1rem;\n}\n\nlegend {\n  font-weight: bold;\n  margin-bottom: 0.5rem;\n}\n\nlabel {\n  display: block;\n  margin-bottom: 5px;\n}\n\ninput,\nselect {\n  display: block;\n  width: 100%;\n  padding: 5px;\n  border: 1px solid #ccc;\n  border-radius: 3px;\n}\n\ninput[type=\"number\"] {\n  width: 50px;\n}\n\ninput[type=\"password\"] {\n  letter-spacing: 2px;\n}\n\nbutton {\n  background-color: #333;\n  color: #fff;\n  padding: 10px 20px;\n  border: none;\n  border-radius: 5px;\n  cursor: pointer;\n  margin-top: 1rem;\n}\n\nbutton:hover {\n  background-color: #444;\n}\n\n/* Add additional styles for specific elements if needed */\n\n.error {\n  color: red;\n  font-size: 0.8rem;\n  margin-top: 5px;\n}\n\n.image-container {\n  flex: 0 0 50%; /* Adjust image width as needed */\n  background-color: #eee; /* Optional background color */\n  display: flex;\n  justify-content: center;\n  align-items: center;\n}\n\n.image-container img {\n  width: 70%; /* Adjust image size as needed */\n  height: auto;\n}\n\n\n.container {\n  position: relative; /* Allow form to position over image */\n  min-height: 100vh; /* Adjust height as needed */\n}\n\n.background-image {\n  position: absolute;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 100%;\n  object-fit: cover; /* Ensure image covers entire container */\n}\n\n.form-container {\n  position: relative; /* Position form elements within container */\n  z-index: 1; /* Ensure form appears above image */\n  padding: 20px; /* Adjust spacing  from image edges */\n  background-color: rgba(255, 255, 255, 0.2); /* Semi-transparent background */\n  /* Other form styling as needed */\n}\n\n/* Existing form styles */\n/* ... */\n\n\n/* Apply your existing form styles here */\n\n</style>\n"],"mappings":";;;;;AAuFA,eAAe;EACbA,IAAI,WAAAA,KAAA,EAAG;IACL,OAAO;MACLC,MAAM,EAAE;QACNC,WAAW,EAAE,EAAE;QACfC,KAAK,EAAE,EAAE;QACTC,IAAI,EAAE,EAAE;QACRC,iBAAiB,EAAE;MACrB,CAAC;MACDC,OAAO,EAAE;QACPC,gBAAgB,EAAE,EAAE;QACpBC,eAAe,EAAE,EAAE;QACnBC,eAAe,EAAE,EAAE;QACnBC,kBAAkB,EAAE;MACtB,CAAC;MACDC,QAAQ,EAAE;IACZ,CAAC;EACH,CAAC;EACDC,OAAO,EAAE;IACPC,YAAY,WAAAA,aAAA,EAAG;MAAA,IAAAC,KAAA;MACbC,KAAK,CAAC,+BAA+B,EAAE;QACrCC,MAAM,EAAE,MAAM;QAAE;QAChBC,OAAO,EAAE;UACP,cAAc,EAAE,kBAAkB,CAAE;QACtC,CAAC;QACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;UACnBlB,WAAW,EAAE,IAAI,CAACD,MAAM,CAACC,WAAW;UACpCC,KAAK,EAAE,IAAI,CAACF,MAAM,CAACE,KAAK;UACxBC,IAAI,EAAE,IAAI,CAACH,MAAM,CAACG,IAAI;UACtBC,iBAAiB,EAAE,CAAC;UACpBI,eAAe,EAAE,EAAE;UACnBF,gBAAgB,EAAE,EAAE;UACpBC,eAAe,EAAE,EAAE;UACnBE,kBAAkB,EAAE,EAAE;UACtBC,QAAQ,EAAE;QACZ,CAAC;MACH,CAAC,EACEU,IAAI,CAAC,UAACC,QAAQ,EAAK;QAClB,IAAIA,QAAQ,CAACC,MAAK,KAAM,GAAG,EAAE;UAC3B;UACA,OAAOD,QAAQ,CAACE,IAAI,CAAC,CAAC,EAAE;QAC1B,OAAO;UACL,MAAM,IAAIC,KAAK,CAAC,6BAA6B,CAAC,EAAE;QAClD;MACF,CAAC,EACAJ,IAAI,CAAC,UAACpB,MAAM,EAAK;QAChB;QACAyB,OAAO,CAACC,GAAG,CAAC,iBAAiB,EAAE1B,MAAM,CAAC;QACtCa,KAAI,CAACc,OAAO,CAACC,IAAI,CAAC;UAAEC,IAAI,EAAE;QAAe,CAAC,CAAC;MAC7C,CAAC,UACK,CAAC,UAACC,KAAK,EAAK;QAChB;QACAL,OAAO,CAACK,KAAK,CAACA,KAAK,CAAC;MACtB,CAAC,CAAC;IACN;EACF;AACF,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}