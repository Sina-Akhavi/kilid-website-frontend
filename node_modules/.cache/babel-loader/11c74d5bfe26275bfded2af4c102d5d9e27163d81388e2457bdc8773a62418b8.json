{"ast":null,"code":"import \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/es.json.stringify.js\";\nimport \"core-js/modules/es.error.cause.js\";\nimport \"core-js/modules/es.error.to-string.js\";\nimport \"core-js/modules/es.array.push.js\";\nexport default {\n  name: \"Login\",\n  data: function data() {\n    return {\n      firstName: \"\",\n      lastName: \"\",\n      email: \"\",\n      username: \"\",\n      password: \"\",\n      url: \"http://localhost:8080/\"\n    };\n  },\n  methods: {\n    handleSubmit: function handleSubmit() {\n      var _this = this;\n      // ------------------ req for delete ok ---------------\n\n      // -------------- req for user/register ---------------\n      fetch(\"http://localhost:8080/user/register\", {\n        method: \"POST\",\n        // Specify POST method\n        headers: {\n          \"Content-Type\": \"application/json\" // Indicate JSON data format\n        },\n        body: JSON.stringify({\n          username: this.username,\n          password: this.password,\n          email: this.email,\n          firstName: this.firstName,\n          lastName: this.lastName\n        })\n      }).then(function (response) {\n        if (response.status === 201) {\n          // Check for successful creation\n          return response.json(); // Parse the response body (assuming it's JSON)\n        } else {\n          throw new Error(\"Registration failed.\"); // Handle other status codes\n        }\n      }).then(function (user) {\n        // Handle successful registration (e.g., redirect to login, show success message)\n        console.log(\"User registered:\", user);\n        _this.$router.push({\n          name: 'Home',\n          query: {\n            name: \"Sina\"\n          }\n        });\n      })[\"catch\"](function (error) {\n        // Handle errors (e.g., display error message to user)\n        console.error(error);\n      });\n\n      // -------------- req for /manager ---------------\n      //   fetch(\"http://localhost:8080/manager/\", {\n      //     method: \"POST\", // Specify POST method\n      //     headers: {\n      //       \"Content-Type\": \"application/json\", // Indicate JSON data format\n      //     },\n      //     body: JSON.stringify({\n      //       username: \"sinaakhavi\",\n      //       estateAgencyId: 1,\n      //     }),\n      //     mode: \"no-cors\",\n      //   })\n      //     .then((response) => {\n      //       if (response.status === 201) {\n      //         // Check for successful creation\n      //         return response.json(); // Parse the response body (assuming it's JSON)\n      //       } else {\n      //         throw new Error(\"Registration failed.\"); // Handle other status codes\n      //       }\n      //     })\n      //     .then((res) => {\n      //       // Handle successful registration (e.g., redirect to login, show success message)\n      //       console.log(\"res:\", res);\n      //     })\n      //     .catch((error) => {\n      //       // Handle errors (e.g., display error message to user)\n      //       console.error(error);\n      //     });\n    } // createManager() {},\n  }\n};","map":{"version":3,"names":["name","data","firstName","lastName","email","username","password","url","methods","handleSubmit","_this","fetch","method","headers","body","JSON","stringify","then","response","status","json","Error","user","console","log","$router","push","query","error"],"sources":["/home/drsystem/Documents/term7/Study/database/final_project/kilid-website-frontend/src/views/Login.vue"],"sourcesContent":["<template>\n  <h2>User Rigistration</h2>\n  <form @submit.prevent=\"\" method=\"post\">\n\n  <label for=\"firstName\">First Name:</label>\n  <input type=\"text\" id=\"firstName\" name=\"firstName\" v-model=\"firstName\" required>\n  <br>\n  <label for=\"lastName\">Last Name:</label>\n  <input type=\"text\" id=\"lastName\" name=\"lastName\" v-model=\"lastName\" required>   \n  \n  <label for=\"email\">Email:</label>\n  <input type=\"email\" id=\"email\" name=\"email\" v-model=\"email\" required>\n\n  <label for=\"username\">Username:</label>\n  <input type=\"text\" id=\"username\" name=\"username\" v-model=\"username\" required>\n  <br>\n\n  <label for=\"password\">Password:</label>\n  <input type=\"text\" id=\"password\" name=\"password\" v-model=\"password\" required>\n  <br>\n  <br>\n  \n  <br>\n  <button @click=\"handleSubmit\" >Submit</button>\n</form>\n</template>\n\n<script>\nexport default {\n  name: \"Login\",\n  data() {\n    return {\n      firstName: \"\",\n      lastName: \"\",\n      email:\"\",\n      username: \"\",\n      password: \"\",\n      url: \"http://localhost:8080/\",\n    };\n  },\n\n  methods: {\n    handleSubmit() {\n      // ------------------ req for delete ok ---------------\n\n      // -------------- req for user/register ---------------\n      fetch(\"http://localhost:8080/user/register\", {\n        method: \"POST\", // Specify POST method\n        headers: {\n          \"Content-Type\": \"application/json\", // Indicate JSON data format\n        },\n        body: JSON.stringify({\n          username: this.username,\n          password: this.password,\n          email: this.email,\n          firstName: this.firstName,\n          lastName: this.lastName,\n        }),\n      })\n        .then((response) => {\n          if (response.status === 201) {\n            // Check for successful creation\n            return response.json(); // Parse the response body (assuming it's JSON)\n          } else {\n            throw new Error(\"Registration failed.\"); // Handle other status codes\n          }\n        })\n        .then((user) => {\n          // Handle successful registration (e.g., redirect to login, show success message)\n          console.log(\"User registered:\", user);\n          this.$router.push({ name: 'Home', query: { name: \"Sina\" } });  \n        })\n        .catch((error) => {\n          // Handle errors (e.g., display error message to user)\n          console.error(error);\n        });\n\n      // -------------- req for /manager ---------------\n    //   fetch(\"http://localhost:8080/manager/\", {\n    //     method: \"POST\", // Specify POST method\n    //     headers: {\n    //       \"Content-Type\": \"application/json\", // Indicate JSON data format\n    //     },\n    //     body: JSON.stringify({\n    //       username: \"sinaakhavi\",\n    //       estateAgencyId: 1,\n    //     }),\n    //     mode: \"no-cors\",\n    //   })\n    //     .then((response) => {\n    //       if (response.status === 201) {\n    //         // Check for successful creation\n    //         return response.json(); // Parse the response body (assuming it's JSON)\n    //       } else {\n    //         throw new Error(\"Registration failed.\"); // Handle other status codes\n    //       }\n    //     })\n    //     .then((res) => {\n    //       // Handle successful registration (e.g., redirect to login, show success message)\n    //       console.log(\"res:\", res);\n    //     })\n    //     .catch((error) => {\n    //       // Handle errors (e.g., display error message to user)\n    //       console.error(error);\n    //     });\n    },\n\n    // createManager() {},\n  },\n};\n</script>\n\n<style scoped>\n\nform {\n  /* Add your desired styles here */\n}\n\nlabel {\n  display: block;\n  margin-bottom: 5px;\n}\n\ninput[type=\"text\"],\ninput[type=\"email\"] {\n  width: 100%;\n  padding: 10px;\n  border: 1px solid #ccc;\n  margin-bottom: 10px;\n}\n\nbutton {\n  background-color: #4CAF50;\n  color: white;\n  padding: 10px 20px;\n  border: none;\n  cursor: pointer;\n}\n\n</style>\n"],"mappings":";;;;;AA4BA,eAAe;EACbA,IAAI,EAAE,OAAO;EACbC,IAAI,WAAAA,KAAA,EAAG;IACL,OAAO;MACLC,SAAS,EAAE,EAAE;MACbC,QAAQ,EAAE,EAAE;MACZC,KAAK,EAAC,EAAE;MACRC,QAAQ,EAAE,EAAE;MACZC,QAAQ,EAAE,EAAE;MACZC,GAAG,EAAE;IACP,CAAC;EACH,CAAC;EAEDC,OAAO,EAAE;IACPC,YAAY,WAAAA,aAAA,EAAG;MAAA,IAAAC,KAAA;MACb;;MAEA;MACAC,KAAK,CAAC,qCAAqC,EAAE;QAC3CC,MAAM,EAAE,MAAM;QAAE;QAChBC,OAAO,EAAE;UACP,cAAc,EAAE,kBAAkB,CAAE;QACtC,CAAC;QACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;UACnBX,QAAQ,EAAE,IAAI,CAACA,QAAQ;UACvBC,QAAQ,EAAE,IAAI,CAACA,QAAQ;UACvBF,KAAK,EAAE,IAAI,CAACA,KAAK;UACjBF,SAAS,EAAE,IAAI,CAACA,SAAS;UACzBC,QAAQ,EAAE,IAAI,CAACA;QACjB,CAAC;MACH,CAAC,EACEc,IAAI,CAAC,UAACC,QAAQ,EAAK;QAClB,IAAIA,QAAQ,CAACC,MAAK,KAAM,GAAG,EAAE;UAC3B;UACA,OAAOD,QAAQ,CAACE,IAAI,CAAC,CAAC,EAAE;QAC1B,OAAO;UACL,MAAM,IAAIC,KAAK,CAAC,sBAAsB,CAAC,EAAE;QAC3C;MACF,CAAC,EACAJ,IAAI,CAAC,UAACK,IAAI,EAAK;QACd;QACAC,OAAO,CAACC,GAAG,CAAC,kBAAkB,EAAEF,IAAI,CAAC;QACrCZ,KAAI,CAACe,OAAO,CAACC,IAAI,CAAC;UAAE1B,IAAI,EAAE,MAAM;UAAE2B,KAAK,EAAE;YAAE3B,IAAI,EAAE;UAAO;QAAE,CAAC,CAAC;MAC9D,CAAC,UACK,CAAC,UAAC4B,KAAK,EAAK;QAChB;QACAL,OAAO,CAACK,KAAK,CAACA,KAAK,CAAC;MACtB,CAAC,CAAC;;MAEJ;MACF;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;IACA,CAAC,CAED;EACF;AACF,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}